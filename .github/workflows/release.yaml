name: Release
on:
  push:
    branches:
      - workflow_release
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-alpha'
      - 'v[0-9]+.[0-9]+.[0-9]+-beta'

env:
  # Emit backtraces on panics.
  RUST_BACKTRACE: full
  # Enable colors in cargo output.
  CARGO_TERM_COLOR: always
  # Use sparse index (if supported).
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  # Disable incremental compilation.
  CARGO_INCREMENTAL: 0

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Get release information
        id: info
        run: |
          ref_name='${{ github.ref_name }}'
          echo "ref_name: $ref_name"

          # is this a test release, or a real release?
          if [[ "$ref_name" == 'workflow_release' ]]; then
            version='v0.0.0-test'
            target_commitish='${{ github.sha }}'
            draft='true'
            dry_run='--dry-run'
          else
            version="$ref_name"
            target_commitish=''
            draft='false'
            dry_run=''
          fi
          echo "version: $version"
          echo "target_commitish: $target_commitish"

          # is this a pre-release (-rc*, -alpha, -beta, -test)?
          if [[ "$version" == *"-"* ]]; then
            prerelease='true'
          else
            prerelease='false'
          fi
          echo "prerelease: $prerelease"

          date=$(env TZ=':America/Los_Angeles' date +'%Y-%m-%d')
          echo "date: $date"

          echo "version=$version" >> $GITHUB_OUTPUT
          echo "target_commitish=$target_commitish" >> $GITHUB_OUTPUT
          echo "draft=$draft" >> $GITHUB_OUTPUT
          echo "dry_run=$dry_run" >> $GITHUB_OUTPUT
          echo "prerelease=$prerelease" >> $GITHUB_OUTPUT
          echo "date=$date" >> $GITHUB_OUTPUT
        shell: bash

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Sync toolchain
        run: rustup show
        shell: bash

      - name: Run cargo check (debug)
        run: cargo check --workspace
        shell: bash

      - name: Run cargo check (release)
        run: cargo check --workspace --release
        shell: bash

      - name: Create GitHub release
        id: release
        run: |
          curl \
            --fail \
            --request 'POST' \
            --url '${{ github.api_url }}/repos/${{ github.repository }}/releases' \
            --header 'Accept: application/vnd.github+json' \
            --header 'Authorization: Bearer ${{ github.token }}' \
            --header 'Content-type: application/json' \
            --data '{
              "tag_name": "${{ steps.info.outputs.version }}",
              "target_commitish": "${{ steps.info.outputs.target_commitish }}",
              "name": "${{ steps.info.outputs.version }} (${{ steps.info.outputs.date }})",
              "prerelease": ${{ steps.info.outputs.prerelease }},
              "draft": ${{ steps.info.outputs.draft }}
              }' \
            --output 'release.json'
          cat release.json
        shell: bash

      - name: Run cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish ${{ steps.info.outputs.dry_run }}
        shell: bash

      - name: Show published files
        continue-on-error: true
        run: tar tf target/package/lcid-*.crate
        shell: bash
